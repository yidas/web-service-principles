@startuml
participant "Client" as c
participant "Server" as s
==TCP Handshake==
c->s: [SYN]
s->c: [SYN, ACK]
c->s: [ACK]
==TLS Handshake==
c->s: **Client Hello**\nProtocol version, supported ciphers, a random number
s->c: **Server Hello**\nChosen protocol version, a random number, Cipher Suite
s->c: **Certificate**
s->c: **Server Key Exchange, [Certificacte Request]. Server Hello Done**
c->c: Verify Server Certificate (Extract public key)
c->s: **Client Key Exchange**\nPreMasterSecret (Encrypted using the public key of the server certificate)
alt Certificate Request
c->s: **Certificate, Certifiacte Verify**\nSignature using the client's certificate's private key\n(Can be verified by using the client's certificate's public key)
s->s: Verify signature
end
note over c, s: Compute MasterSecret by random numbers & PreMasterSecret
c->s: **Change Cipher Spec, Encrpted Handshake Message**\n Finished message, derived from MasterSecret
s->s: Decrypt and verify
s->c: **Change Cipher Spec, Encrpted Handshake Message**\n Finished message, derived from MasterSecret
c->c: Decrypt and verify
==Data Exchange==
c->s: **Application Data**
s->c: **Application Data**
==Connection termination==
c->s: **Encrypted Alert**
c->s: [FIN, ACK]
s->c: [FIN, ACK]
c->s: [ACK]
@enduml
